<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
  
	<bean id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="url" value="jdbc:mysql://localhost:3306/projetair"></property>
		<property name="username" value="root"></property>
		<property name="password" value=""></property>
	</bean>

	<bean id="persistenceUnitManager"
		class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="defaultDataSource" ref="datasource"></property>
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:META-INF/persistence.xml</value>
			</list>
		</property>
	</bean>
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="persistenceUnitManager"></property>
		<property name="persistenceUnitName" value="ProjetPersistence"></property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>


	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config></context:annotation-config>

	<!-- les bean de notre application -->


	<!-- Administrateur -->

	<bean id="administrateurDao" class="com.projet.air2.dao.AdministrateurDaoImpl"></bean>
	<bean id="administrateurMetier" class="com.projet.air2.metier.AdministrateurMetierImpl">

		<property name="administrateurDao" ref="administrateurDao"></property>

	</bean>



	<!-- Cours -->

	<bean id="coursDao" class="com.projet.air2.dao.CoursDaoImpl"></bean>

	<bean id="coursMetier" class="com.projet.air2.metier.CoursMetierImpl">

		<property name="coursDao" ref="coursDao"></property>

	</bean>


	<!-- Ecole -->

	<bean id="ecoleDao" class="com.projet.air2.dao.EcoleDaoImpl"></bean>
	<bean id="ecoleMetier" class="com.projet.air2.metier.EcoleMetierImpl">

		<property name="ecoleDao" ref="ecoleDao"></property>

	</bean>

	<!-- Eleve -->

	<bean id="eleveDao" class="com.projet.air2.dao.EleveDaoImpl"></bean>
	<bean id="eleveMetier" class="com.projet.air2.metier.EleveMetierImpl">

		<property name="eleveDao" ref="eleveDao"></property>

	</bean>

	<!-- Gerant -->

	<bean id="gerantDao" class="com.projet.air2.dao.GerantDaoImpl"></bean>
	<bean id="gerantMetier" class="com.projet.air2.metier.GerantMetierImpl">

		<property name="gerantDao" ref="gerantDao"></property>

	</bean>



	<!-- Moniteur -->

	<bean id="moniteurDao" class="com.projet.air2.dao.MoniteurDaoImpl"></bean>
	<bean id="moniteurMetier" class="com.projet.air2.metier.MoniteurMetierImpl">

		<property name="moniteurDao" ref="moniteurDao"></property>

	</bean>



	<!-- Permis -->

	<bean id="permisDao" class="com.projet.air2.dao.PermisDaoImpl"></bean>
	<bean id="permisMertier" class="com.projet.air2.metier.PermisMetierImpl">

		<property name="permisDao" ref="permisDao"></property>

	</bean>


	<bean id="roleDao" class="com.projet.air2.dao.RoleDaoImpl"></bean>
	<bean id="roleMetier" class="com.projet.air2.metier.RoleMetierImpl">

		<property name="roleDao" ref="roleDao"></property>

	</bean>



	<!-- La configuraiton pour faire le spring sécurity -->

	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/adminAdmin/**"
			access="hasRole('ROLE_ADMINISTRATEUR')" />
		<security:intercept-url pattern="/adminGerant/**"
			access="hasRole('ROLE_ADMINISTRATEUR')" />
		<security:intercept-url pattern="/adminEcole/**"
			access="hasRole('ROLE_ADMINISTRATEUR')" />


		<security:intercept-url pattern="/adminMoniteur/**"
			access="hasRole('ROLE_GERANT') or hasRole('ROLE_ADMINISTRATEUR')" />
		<security:intercept-url pattern="/adminEleve/**"
			access="hasRole('ROLE_GERANT') or hasRole('ROLE_ADMINISTRATEUR')" />


		<security:intercept-url pattern="/adminCours/**"
			access="hasRole('ROLE_GERANT') or hasRole('ROLE_ADMINISTRATEUR')" />
		<security:intercept-url pattern="/adminPermis/**"
			access="hasRole('ROLE_GERANT') or hasRole('ROLE_ADMINISTRATEUR')" />



		<security:form-login login-page="/login"
			default-target-url="/index" authentication-failure-url="/login" />

		<security:logout logout-success-url="/login" />
	</security:http>

	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:user-service> <security:user name="amgoud" password="amgoud" authorities="ROLE_ADMINISTRATEUR" 
		/> </security:user-service> </security:authentication-provider> </security:authentication-manager> -->


	<security:authentication-manager>

		<!-- les autorisations pour les administrateurs -->
		<security:authentication-provider>
			<security:password-encoder hash="md5">
			</security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="datasource"
				users-by-username-query="select username,password, active  FROM administrateur WHERE username=?"
				authorities-by-username-query="select a.username, r.rolename FROM administrateur a, role r WHERE a.idrole = r.idrole and a.username =? " />
		</security:authentication-provider>


		<!-- les autorisations pour les gérants -->

		<security:authentication-provider>
			<security:password-encoder hash="md5">
			</security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="datasource"
				users-by-username-query="select username,password, active  FROM gerant WHERE username=?"
				authorities-by-username-query="select g.username, r.rolename FROM gerant g, role r WHERE g.idrole = r.idrole and g.username =? " />
		</security:authentication-provider>



		<!-- les autorisations pour les moniteurs -->

		<security:authentication-provider>
			<security:password-encoder hash="md5">
			</security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="datasource"
				users-by-username-query="select username,password, active  FROM moniteur WHERE username=?"
				authorities-by-username-query="select m.username, r.rolename FROM moniteur m, role r WHERE m.idrole = r.idrole and m.username =? " />
		</security:authentication-provider>



		<!-- les autorisations pour les eleves -->

		<security:authentication-provider>
			<security:password-encoder hash="md5">
			</security:password-encoder>
			<security:jdbc-user-service
				data-source-ref="datasource"
				users-by-username-query="select username,password, active  FROM eleve WHERE username=?"
				authorities-by-username-query="select e.username, r.rolename FROM eleve e, role r WHERE e.idrole = r.idrole and e.username =? " />
		</security:authentication-provider>


	</security:authentication-manager>















</beans>
